apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "chart.fullname" . }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "chart.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.csiControllerRclone.serviceAccount.annotations | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "chart.fullname" . }}-external-controller
  labels:
  {{- include "chart.labels" . | nindent 4 }}
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources: 
  - "secrets"
  - "secret"
  verbs:
  - "get"
  - "list"
  - "create" # TODO: check if necessary
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csinodeinfos
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "chart.fullname" . }}-attacher-role
  labels:
  {{- include "chart.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: '{{ include "chart.fullname" . }}-external-controller'
subjects:
- kind: ServiceAccount
  name: '{{ include "chart.fullname" . }}-controller'
  namespace: {{ .Release.Namespace }}

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "chart.fullname" . }}-external-provisioner-runner
  labels:
  {{- include "chart.labels" . | nindent 4 }}
rules:
  # The following rule should be uncommented for plugins that require secrets
  # for provisioning.
  - apiGroups: 
    - ""
    resources:
    - "secrets"
    verbs: 
    - "get"
    - "list"
  - apiGroups:
    - ""
    resources:
    - "persistentvolumes"
    verbs: 
    - "get"
    - "list"
    - "watch"
    - "create"
    - "delete"
  - apiGroups: 
    - ""
    resources:
    - "persistentvolumeclaims"
    verbs:
    - "get"
    - "list"
    - "watch"
    - "update"
  - apiGroups: 
    - "storage.k8s.io"
    resources:
    - "storageclasses"
    verbs: 
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - ""
    resources:
    - "events"
    verbs:
    - "list"
    - "watch"
    - "create"
    - "update"
    - "patch"
  - apiGroups: 
    - "snapshot.storage.k8s.io"
    resources: 
    - "volumesnapshots"
    verbs: 
    - "get"
    - "list"
  - apiGroups: 
    - "snapshot.storage.k8s.io"
    resources: 
    - "volumesnapshotcontents"
    verbs: 
    - "get"
    - "list"
  - apiGroups: 
    - "storage.k8s.io"
    resources: 
    - "csinodes"
    verbs: 
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - ""
    resources: 
    - "nodes"
    verbs: 
    - "get"
    - "list"
    - "watch"
  # Access to volumeattachments is only needed when the CSI driver
  # has the PUBLISH_UNPUBLISH_VOLUME controller capability.
  # In that case, external-provisioner will watch volumeattachments
  # to determine when it is safe to delete a volume.
  - apiGroups: 
    - "storage.k8s.io"
    resources: 
    - "volumeattachments"
    verbs: 
    - "get"
    - "list"
    - "watch"

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "chart.fullname" . }}-provisioner-role
  labels:
  {{- include "chart.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: '{{ include "chart.fullname" . }}-controller'
    namespace: '{{ .Release.Namespace }}'
roleRef:
  kind: ClusterRole
  name: '{{ include "chart.fullname" . }}-external-provisioner-runner'
  apiGroup: rbac.authorization.k8s.io

---
# Provisioner must be able to work with endpoints in current namespace
# if (and only if) leadership election is enabled
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "chart.fullname" . }}-external-provisioner-cfg
  namespace: {{ .Release.Namespace }}
rules:
# Only one of the following rules for endpoints or leases is required based on
# what is set for `--leader-election-type`. Endpoints are deprecated in favor of Leases.
- apiGroups: 
  - ""
  resources: 
  - "endpoints"
  verbs:
  - "get"
  - "watch"
  - "list"
  - "delete"
  - "update"
  - "create"
- apiGroups: 
  - "coordination.k8s.io"
  resources:
  - "leases"
  verbs: 
  - "get"
  - "watch"
  - "list"
  - "delete"
  - "update"
  - "create"
# Permissions for CSIStorageCapacity are only needed enabling the publishing
# of storage capacity information.
- apiGroups: 
  - "storage.k8s.io"
  resources: 
  - "csistoragecapacities"
  verbs: 
  - "get"
  - "list"
  - "watch"
  - "create"
  - "update"
  - "patch"
  - "delete"
# The GET permissions below are needed for walking up the ownership chain
# for CSIStorageCapacity. They are sufficient for deployment via
# StatefulSet (only needs to get Pod) and Deployment (needs to get
# Pod and then ReplicaSet to find the Deployment).
- apiGroups: 
  - ""
  resources: 
  - "pods"
  verbs: 
  - "get"

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "chart.fullname" . }}-provisioner-role-cfg
  namespace: '{{ .Release.Namespace }}'
subjects:
  - kind: ServiceAccount
    name: {{ include "chart.fullname" . }}-controller
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ include "chart.fullname" . }}-external-provisioner-cfg